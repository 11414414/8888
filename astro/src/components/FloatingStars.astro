---
import '../styles/FloatingStars.css';
import logoLight from "/assets/logo-light.svg";
import logoDark from "/assets/logo-dark.svg";
---

<div id="stars-container" class="stars-background"></div>

<script type="module" is:inline>
let stars = [];

function createStars(container) {
  const baseNumStars = 144;
  const screenFactor = Math.max(0.5, Math.min(1, window.innerWidth / 1440));
  const numStars = Math.floor(baseNumStars * screenFactor);

  for (let i = 0; i < numStars; i++) {
    const star = document.createElement('div');
    star.classList.add('star');

    const size = 1 + Math.random() * 2;
    const depth = 0.5 + (4 - size) / 4;
    const speed = (0.065 + (4 - size) * 0.065) * depth;
    const shimmerDuration = 3 + Math.random() * 3;

    const adjustedSize = size * (1 + depth * 0.2);

    star.style.width = `${adjustedSize}vw`;
    star.style.height = `${adjustedSize}vw`;
    star.style.animationDuration = `${shimmerDuration}s`;

    container.appendChild(star);

    stars.push({
      el: star,
      x: Math.random() * window.innerWidth,
      y: Math.random() * window.innerHeight,
      vx: (Math.random() - 0.5) * speed * 2,
      vy: (Math.random() - 0.5) * speed * 2,
      rotation: Math.random() * 360,
      rotationSpeed: 0.065 + Math.random() * 0.13,
      wobblePhaseX: Math.random() * Math.PI * 2,
      wobblePhaseY: Math.random() * Math.PI * 2,
      tiltPhase: Math.random() * Math.PI * 2,
      scalePhase: Math.random() * Math.PI * 2,
      flickerPhase: Math.random() * Math.PI * 2,
      depth: depth,
      baseOpacity: 0.5 + Math.random() * 0.5
    });
  }
}

function animateStars() {
  const time = Date.now() / 1000;
  stars.forEach(star => {
    const wobbleX = Math.sin(time + star.wobblePhaseX) * 0.5 * star.depth;
    const wobbleY = Math.cos(time + star.wobblePhaseY) * 0.5 * star.depth;
    const tilt = Math.sin(time + star.tiltPhase) * 5 * star.depth;
    const scale = 1 + Math.sin(time + star.scalePhase) * 0.02 * star.depth;
    const flicker = 0.8 + Math.sin(time * 5 + star.flickerPhase) * 0.2;

    star.x += star.vx;
    star.y += star.vy;
    star.rotation += star.rotationSpeed * star.depth;

    if (star.x < -100) star.x = window.innerWidth + 100;
    if (star.x > window.innerWidth + 100) star.x = -100;
    if (star.y < -100) star.y = window.innerHeight + 100;
    if (star.y > window.innerHeight + 100) star.y = -100;

    star.el.style.transform = `translate3d(${star.x}px, ${star.y}px, 0) rotate(${star.rotation + tilt}deg) scale(${scale})`;
    star.el.style.opacity = Math.min(1, Math.max(0.2, star.baseOpacity * flicker));
  });

  requestAnimationFrame(animateStars);
}

window.addEventListener('themeChange', () => {
  document.querySelectorAll('.star').forEach(star => {
    star.style.filter = 'invert(100%) drop-shadow(0 0 4px rgba(255, 255, 255, 0.6))';
  });
});

window.addEventListener('themeChange', () => {
  document.querySelectorAll('.star').forEach(star => {
    star.style.filter = 'invert(0%) drop-shadow(0 0 4px rgba(255, 255, 255, 0.6))';
  });
});


// Initialize after DOM is loaded
if (typeof window !== "undefined") {
  window.addEventListener('DOMContentLoaded', () => {
    const container = document.getElementById('stars-container');
    if (container) {
      createStars(container);
      animateStars();
    } else {
      console.error('No stars container found!');
    }
  });
}
</script>
